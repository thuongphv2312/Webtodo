{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/webtodo/src/pages/index.js\";\nimport React, { useState } from 'react';\nimport './Styles.css';\nexport default function App(prop) {\n  const [task, setTask] = useState('');\n  const [listTask, setListTask] = useState([]);\n\n  const onSubmit = () => {\n    if (task !== '') {\n      setListTask([...listTask, task]);\n      setTask('');\n    } else {\n      alert('PLease enter task !!!');\n    }\n  };\n\n  console.log('=====' + listTask);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"To Do\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Add Task : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textinput\",\n    placeholder: \"What needs to be done?\",\n    onChange: event => {\n      setTask(event.target.value);\n    },\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    value: \"Submit\",\n    className: \"buttonsubmit\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"submit\")), listTask.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: index % 2 === 0 ? 'green' : 'yellow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \" \", item), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Delete\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }\n  }, \"item left\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Completed\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Clear all task completed\")))));\n}","map":{"version":3,"sources":["/Users/apple/Desktop/webtodo/src/pages/index.js"],"names":["React","useState","App","prop","task","setTask","listTask","setListTask","onSubmit","alert","console","log","event","target","value","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Styles.css';\nexport default function App(prop) {\n  const [task, setTask] = useState('');\n  const [listTask, setListTask] = useState([]);\n\n  const onSubmit = () => {\n    if (task !== '') {\n      setListTask([...listTask, task]);\n      setTask('');\n    }\n    else {\n      alert('PLease enter task !!!')\n    }\n  }\n\n  console.log('=====' + listTask);\n\n  return (\n    <div className='header'>\n      <h2 >To Do</h2>\n      <div>\n        <span>Add Task : </span>\n        <input\n          type='text'\n          className='textinput'\n          placeholder='What needs to be done?'\n          onChange={(event) => { setTask(event.target.value) }}\n          value={task} />\n        <button type='button' value='Submit' className='buttonsubmit' onClick={onSubmit}>submit</button>\n      </div>\n      {listTask.map((item, index) => {\n        return <div className = {index %2 === 0 ? 'green':'yellow' } >\n          <input type='checkbox' />\n          <label> {item}</label>\n          <button className='btColor'>Delete</button>\n        </div>\n      })}\n      <div className='footer'>\n        <ul >\n          <li ><a href='0'>item left</a></li>\n          <li><a href='1'>All</a></li>\n          <li><a href='2'>Active</a></li>\n          <li><a href='3'>Completed</a></li>\n          <li><a href='4'>Clear all task completed</a></li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}