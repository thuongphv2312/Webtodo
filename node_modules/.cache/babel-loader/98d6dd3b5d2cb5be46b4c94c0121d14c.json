{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Reactodo/src/components/TodoItem.js\";\nimport React from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport './Style.css';\n\nconst TodoItem = props => {\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"myCheck\",\n    checked: props.item.status === true,\n    onClick: () => props.onToggleStatus(props.item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.SelectCustomHtmlSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"List Task\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    htmlSize: 8,\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"props.\")))));\n};\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/apple/Desktop/Reactodo/src/components/TodoItem.js"],"names":["React","Container","Form","TodoItem","props","item","status","onToggleStatus","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAA+B,iBAA/B;AACA,OAAO,aAAP;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,SAA1B;AAAoC,IAAA,OAAO,EAAEA,KAAK,CAACC,IAAN,CAAWC,MAAX,KAAsB,IAAnE;AAAyE,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACC,IAAN,CAAWG,EAAhC,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,kCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,QAAQ,EAAE,CAApC;AAAuC,IAAA,MAAM,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,CADF,CARF,CADF;AAmBD,CApBD;;AAqBA,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport { Container ,Form} from 'react-bootstrap';\nimport './Style.css';\nconst TodoItem = (props) => {\n  return (\n    <Container>\n      <div className='listItems'>\n        <input type='checkbox' id='myCheck' checked={props.item.status === true} onClick={() => props.onToggleStatus(props.item.id)} />\n        <label id='content'>\n          {/* {props.item.status ? (<span className='colorGray'><strike>{props.item.content}</strike></span>):props.item.content} */}\n        </label>\n        {/* <button className='DeleteHide' type='button' onClick={() => props.onSubmitDelete(props.item.id)}>Delete</button> */}\n      </div>\n      <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustomHtmlSize\">\n          <Form.Label>List Task</Form.Label>\n          <Form.Control as=\"select\" htmlSize={8} custom>\n            <option>props.</option>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}